{"version":3,"file":"index.18c04e75.js","sources":["../../src/Store.ts","../../src/components/FilterOptions.tsx","../../src/utils/pokemonNames.ts","../../src/components/Header/Search.tsx","../../src/components/Header/ThemeToggle.tsx","../../src/theme/theme.ts","../../src/components/Header/Logo.tsx","../../assets/pikachu.gif","../../src/components/Header/Header.tsx","../../src/utils/pokemonTypes.ts","../../src/components/TypeSelect.tsx","../../src/components/GenSelect.tsx","../../src/hooks/usePokemon.ts","../../src/components/Main/PokeCard.tsx","../../src/components/Main/PokeCards.tsx","../../src/components/PokeCardEx.tsx","../../src/components/Main/Main.tsx","../../src/App.tsx","../../src/main.tsx"],"sourcesContent":["import create, { GetState, SetState } from \"zustand\";\r\n\r\nexport type Filter = \"type\" | \"generation\" | null;\r\n\r\ninterface Store {\r\n  filter: Filter;\r\n  setFilter: (filter: Filter) => void;\r\n  darkMode: boolean;\r\n  toggleDarkMode: () => void;\r\n  setDarkMode: (isDarkMode: boolean) => void;\r\n}\r\n\r\nconst useStore = create<Store>(\r\n  (set: SetState<Store>, get: GetState<Store>): Store => ({\r\n    filter: null,\r\n    setFilter: (filter: Filter) => set({ filter }),\r\n    darkMode: false,\r\n    toggleDarkMode: () => {\r\n      const { darkMode: isDarkMode } = get();\r\n      localStorage.setItem(\"darkMode\", isDarkMode ? \"0\" : \"1\");\r\n      set({ darkMode: !isDarkMode });\r\n    },\r\n    setDarkMode: (isDarkMode: boolean) => {\r\n      set({ darkMode: isDarkMode });\r\n    }\r\n  })\r\n);\r\n\r\nexport default useStore;\r\n","import * as React from \"react\";\r\nimport {\r\n  HStack,\r\n  Box,\r\n  RadioProps,\r\n  useRadio,\r\n  useRadioGroup,\r\n} from \"@chakra-ui/react\";\r\nimport { useHistory, useLocation } from \"react-router-dom\";\r\nimport useStore, { Filter } from \"../Store\";\r\n\r\nconst RadioCard = (props: RadioProps) => {\r\n  const { getInputProps, getCheckboxProps } = useRadio(props);\r\n\r\n  const input = getInputProps();\r\n  const checkbox = getCheckboxProps();\r\n\r\n  return (\r\n    <Box as=\"label\">\r\n      <input {...input} />\r\n      <Box\r\n        {...checkbox}\r\n        bg=\"#fff\"\r\n        cursor=\"pointer\"\r\n        borderWidth=\"1px\"\r\n        borderRadius=\"md\"\r\n        boxShadow=\"md\"\r\n        _checked={{\r\n          bg: \"teal.600\",\r\n          color: \"white\",\r\n          borderColor: \"teal.600\",\r\n        }}\r\n        _focus={{\r\n          boxShadow: \"outline\",\r\n        }}\r\n        px={3}\r\n        py={1.5}\r\n        textTransform=\"capitalize\"\r\n      >\r\n        {props.children}\r\n      </Box>\r\n    </Box>\r\n  );\r\n};\r\n\r\nconst syncWithParams = (param: string) => {\r\n  if (param.includes(\"type\")) return \"type\";\r\n  else if (param.includes(\"generation\")) return \"generation\";\r\n  else return \"\";\r\n};\r\n\r\nconst FilterOptions = () => {\r\n  const setFilter = useStore((state) => state.setFilter);\r\n  const options = [\"type\", \"generation\"];\r\n  const history = useHistory();\r\n  const params = new URLSearchParams(useLocation().search).toString();\r\n\r\n  const { getRootProps: getRadioRootProps, getRadioProps } = useRadioGroup({\r\n    name: \"pokemonTypes\",\r\n    value: syncWithParams(params),\r\n    onChange: (val: Exclude<Filter, null>) => {\r\n      const params = new URLSearchParams(\r\n        val === \"type\" ? { type: \"grass\" } : { generation: \"1\" }\r\n      );\r\n      history.push({\r\n        pathname: \"/\",\r\n        search: params.toString(),\r\n      });\r\n    },\r\n  });\r\n\r\n  return (\r\n    <HStack {...getRadioRootProps()}>\r\n      {options.map((value) => {\r\n        const radio = getRadioProps({ value });\r\n        return (\r\n          <RadioCard key={value} {...radio}>\r\n            {value}\r\n          </RadioCard>\r\n        );\r\n      })}\r\n    </HStack>\r\n  );\r\n};\r\n\r\nexport default FilterOptions;\r\n","export const PokemonNames = [\r\n  \"bulbasaur\",\r\n  \"ivysaur\",\r\n  \"venusaur\",\r\n  \"charmander\",\r\n  \"charmeleon\",\r\n  \"charizard\",\r\n  \"squirtle\",\r\n  \"wartortle\",\r\n  \"blastoise\",\r\n  \"caterpie\",\r\n  \"metapod\",\r\n  \"butterfree\",\r\n  \"weedle\",\r\n  \"kakuna\",\r\n  \"beedrill\",\r\n  \"pidgey\",\r\n  \"pidgeotto\",\r\n  \"pidgeot\",\r\n  \"rattata\",\r\n  \"raticate\",\r\n  \"spearow\",\r\n  \"fearow\",\r\n  \"ekans\",\r\n  \"arbok\",\r\n  \"pikachu\",\r\n  \"raichu\",\r\n  \"sandshrew\",\r\n  \"sandslash\",\r\n  \"nidoran-f\",\r\n  \"nidorina\",\r\n  \"nidoqueen\",\r\n  \"nidoran-m\",\r\n  \"nidorino\",\r\n  \"nidoking\",\r\n  \"clefairy\",\r\n  \"clefable\",\r\n  \"vulpix\",\r\n  \"ninetales\",\r\n  \"jigglypuff\",\r\n  \"wigglytuff\",\r\n  \"zubat\",\r\n  \"golbat\",\r\n  \"oddish\",\r\n  \"gloom\",\r\n  \"vileplume\",\r\n  \"paras\",\r\n  \"parasect\",\r\n  \"venonat\",\r\n  \"venomoth\",\r\n  \"diglett\",\r\n  \"dugtrio\",\r\n  \"meowth\",\r\n  \"persian\",\r\n  \"psyduck\",\r\n  \"golduck\",\r\n  \"mankey\",\r\n  \"primeape\",\r\n  \"growlithe\",\r\n  \"arcanine\",\r\n  \"poliwag\",\r\n  \"poliwhirl\",\r\n  \"poliwrath\",\r\n  \"abra\",\r\n  \"kadabra\",\r\n  \"alakazam\",\r\n  \"machop\",\r\n  \"machoke\",\r\n  \"machamp\",\r\n  \"bellsprout\",\r\n  \"weepinbell\",\r\n  \"victreebel\",\r\n  \"tentacool\",\r\n  \"tentacruel\",\r\n  \"geodude\",\r\n  \"graveler\",\r\n  \"golem\",\r\n  \"ponyta\",\r\n  \"rapidash\",\r\n  \"slowpoke\",\r\n  \"slowbro\",\r\n  \"magnemite\",\r\n  \"magneton\",\r\n  \"farfetchd\",\r\n  \"doduo\",\r\n  \"dodrio\",\r\n  \"seel\",\r\n  \"dewgong\",\r\n  \"grimer\",\r\n  \"muk\",\r\n  \"shellder\",\r\n  \"cloyster\",\r\n  \"gastly\",\r\n  \"haunter\",\r\n  \"gengar\",\r\n  \"onix\",\r\n  \"drowzee\",\r\n  \"hypno\",\r\n  \"krabby\",\r\n  \"kingler\",\r\n  \"voltorb\",\r\n  \"electrode\",\r\n  \"exeggcute\",\r\n  \"exeggutor\",\r\n  \"cubone\",\r\n  \"marowak\",\r\n  \"hitmonlee\",\r\n  \"hitmonchan\",\r\n  \"lickitung\",\r\n  \"koffing\",\r\n  \"weezing\",\r\n  \"rhyhorn\",\r\n  \"rhydon\",\r\n  \"chansey\",\r\n  \"tangela\",\r\n  \"kangaskhan\",\r\n  \"horsea\",\r\n  \"seadra\",\r\n  \"goldeen\",\r\n  \"seaking\",\r\n  \"staryu\",\r\n  \"starmie\",\r\n  \"mr-mime\",\r\n  \"scyther\",\r\n  \"jynx\",\r\n  \"electabuzz\",\r\n  \"magmar\",\r\n  \"pinsir\",\r\n  \"tauros\",\r\n  \"magikarp\",\r\n  \"gyarados\",\r\n  \"lapras\",\r\n  \"ditto\",\r\n  \"eevee\",\r\n  \"vaporeon\",\r\n  \"jolteon\",\r\n  \"flareon\",\r\n  \"porygon\",\r\n  \"omanyte\",\r\n  \"omastar\",\r\n  \"kabuto\",\r\n  \"kabutops\",\r\n  \"aerodactyl\",\r\n  \"snorlax\",\r\n  \"articuno\",\r\n  \"zapdos\",\r\n  \"moltres\",\r\n  \"dratini\",\r\n  \"dragonair\",\r\n  \"dragonite\",\r\n  \"mewtwo\",\r\n  \"mew\",\r\n  \"chikorita\",\r\n  \"bayleef\",\r\n  \"meganium\",\r\n  \"cyndaquil\",\r\n  \"quilava\",\r\n  \"typhlosion\",\r\n  \"totodile\",\r\n  \"croconaw\",\r\n  \"feraligatr\",\r\n  \"sentret\",\r\n  \"furret\",\r\n  \"hoothoot\",\r\n  \"noctowl\",\r\n  \"ledyba\",\r\n  \"ledian\",\r\n  \"spinarak\",\r\n  \"ariados\",\r\n  \"crobat\",\r\n  \"chinchou\",\r\n  \"lanturn\",\r\n  \"pichu\",\r\n  \"cleffa\",\r\n  \"igglybuff\",\r\n  \"togepi\",\r\n  \"togetic\",\r\n  \"natu\",\r\n  \"xatu\",\r\n  \"mareep\",\r\n  \"flaaffy\",\r\n  \"ampharos\",\r\n  \"bellossom\",\r\n  \"marill\",\r\n  \"azumarill\",\r\n  \"sudowoodo\",\r\n  \"politoed\",\r\n  \"hoppip\",\r\n  \"skiploom\",\r\n  \"jumpluff\",\r\n  \"aipom\",\r\n  \"sunkern\",\r\n  \"sunflora\",\r\n  \"yanma\",\r\n  \"wooper\",\r\n  \"quagsire\",\r\n  \"espeon\",\r\n  \"umbreon\",\r\n  \"murkrow\",\r\n  \"slowking\",\r\n  \"misdreavus\",\r\n  \"unown\",\r\n  \"wobbuffet\",\r\n  \"girafarig\",\r\n  \"pineco\",\r\n  \"forretress\",\r\n  \"dunsparce\",\r\n  \"gligar\",\r\n  \"steelix\",\r\n  \"snubbull\",\r\n  \"granbull\",\r\n  \"qwilfish\",\r\n  \"scizor\",\r\n  \"shuckle\",\r\n  \"heracross\",\r\n  \"sneasel\",\r\n  \"teddiursa\",\r\n  \"ursaring\",\r\n  \"slugma\",\r\n  \"magcargo\",\r\n  \"swinub\",\r\n  \"piloswine\",\r\n  \"corsola\",\r\n  \"remoraid\",\r\n  \"octillery\",\r\n  \"delibird\",\r\n  \"mantine\",\r\n  \"skarmory\",\r\n  \"houndour\",\r\n  \"houndoom\",\r\n  \"kingdra\",\r\n  \"phanpy\",\r\n  \"donphan\",\r\n  \"porygon2\",\r\n  \"stantler\",\r\n  \"smeargle\",\r\n  \"tyrogue\",\r\n  \"hitmontop\",\r\n  \"smoochum\",\r\n  \"elekid\",\r\n  \"magby\",\r\n  \"miltank\",\r\n  \"blissey\",\r\n  \"raikou\",\r\n  \"entei\",\r\n  \"suicune\",\r\n  \"larvitar\",\r\n  \"pupitar\",\r\n  \"tyranitar\",\r\n  \"lugia\",\r\n  \"ho-oh\",\r\n  \"celebi\",\r\n  \"treecko\",\r\n  \"grovyle\",\r\n  \"sceptile\",\r\n  \"torchic\",\r\n  \"combusken\",\r\n  \"blaziken\",\r\n  \"mudkip\",\r\n  \"marshtomp\",\r\n  \"swampert\",\r\n  \"poochyena\",\r\n  \"mightyena\",\r\n  \"zigzagoon\",\r\n  \"linoone\",\r\n  \"wurmple\",\r\n  \"silcoon\",\r\n  \"beautifly\",\r\n  \"cascoon\",\r\n  \"dustox\",\r\n  \"lotad\",\r\n  \"lombre\",\r\n  \"ludicolo\",\r\n  \"seedot\",\r\n  \"nuzleaf\",\r\n  \"shiftry\",\r\n  \"taillow\",\r\n  \"swellow\",\r\n  \"wingull\",\r\n  \"pelipper\",\r\n  \"ralts\",\r\n  \"kirlia\",\r\n  \"gardevoir\",\r\n  \"surskit\",\r\n  \"masquerain\",\r\n  \"shroomish\",\r\n  \"breloom\",\r\n  \"slakoth\",\r\n  \"vigoroth\",\r\n  \"slaking\",\r\n  \"nincada\",\r\n  \"ninjask\",\r\n  \"shedinja\",\r\n  \"whismur\",\r\n  \"loudred\",\r\n  \"exploud\",\r\n  \"makuhita\",\r\n  \"hariyama\",\r\n  \"azurill\",\r\n  \"nosepass\",\r\n  \"skitty\",\r\n  \"delcatty\",\r\n  \"sableye\",\r\n  \"mawile\",\r\n  \"aron\",\r\n  \"lairon\",\r\n  \"aggron\",\r\n  \"meditite\",\r\n  \"medicham\",\r\n  \"electrike\",\r\n  \"manectric\",\r\n  \"plusle\",\r\n  \"minun\",\r\n  \"volbeat\",\r\n  \"illumise\",\r\n  \"roselia\",\r\n  \"gulpin\",\r\n  \"swalot\",\r\n  \"carvanha\",\r\n  \"sharpedo\",\r\n  \"wailmer\",\r\n  \"wailord\",\r\n  \"numel\",\r\n  \"camerupt\",\r\n  \"torkoal\",\r\n  \"spoink\",\r\n  \"grumpig\",\r\n  \"spinda\",\r\n  \"trapinch\",\r\n  \"vibrava\",\r\n  \"flygon\",\r\n  \"cacnea\",\r\n  \"cacturne\",\r\n  \"swablu\",\r\n  \"altaria\",\r\n  \"zangoose\",\r\n  \"seviper\",\r\n  \"lunatone\",\r\n  \"solrock\",\r\n  \"barboach\",\r\n  \"whiscash\",\r\n  \"corphish\",\r\n  \"crawdaunt\",\r\n  \"baltoy\",\r\n  \"claydol\",\r\n  \"lileep\",\r\n  \"cradily\",\r\n  \"anorith\",\r\n  \"armaldo\",\r\n  \"feebas\",\r\n  \"milotic\",\r\n  \"castform\",\r\n  \"kecleon\",\r\n  \"shuppet\",\r\n  \"banette\",\r\n  \"duskull\",\r\n  \"dusclops\",\r\n  \"tropius\",\r\n  \"chimecho\",\r\n  \"absol\",\r\n  \"wynaut\",\r\n  \"snorunt\",\r\n  \"glalie\",\r\n  \"spheal\",\r\n  \"sealeo\",\r\n  \"walrein\",\r\n  \"clamperl\",\r\n  \"huntail\",\r\n  \"gorebyss\",\r\n  \"relicanth\",\r\n  \"luvdisc\",\r\n  \"bagon\",\r\n  \"shelgon\",\r\n  \"salamence\",\r\n  \"beldum\",\r\n  \"metang\",\r\n  \"metagross\",\r\n  \"regirock\",\r\n  \"regice\",\r\n  \"registeel\",\r\n  \"latias\",\r\n  \"latios\",\r\n  \"kyogre\",\r\n  \"groudon\",\r\n  \"rayquaza\",\r\n  \"jirachi\",\r\n  \"deoxys-normal\",\r\n  \"turtwig\",\r\n  \"grotle\",\r\n  \"torterra\",\r\n  \"chimchar\",\r\n  \"monferno\",\r\n  \"infernape\",\r\n  \"piplup\",\r\n  \"prinplup\",\r\n  \"empoleon\",\r\n  \"starly\",\r\n  \"staravia\",\r\n  \"staraptor\",\r\n  \"bidoof\",\r\n  \"bibarel\",\r\n  \"kricketot\",\r\n  \"kricketune\",\r\n  \"shinx\",\r\n  \"luxio\",\r\n  \"luxray\",\r\n  \"budew\",\r\n  \"roserade\",\r\n  \"cranidos\",\r\n  \"rampardos\",\r\n  \"shieldon\",\r\n  \"bastiodon\",\r\n  \"burmy\",\r\n  \"wormadam-plant\",\r\n  \"mothim\",\r\n  \"combee\",\r\n  \"vespiquen\",\r\n  \"pachirisu\",\r\n  \"buizel\",\r\n  \"floatzel\",\r\n  \"cherubi\",\r\n  \"cherrim\",\r\n  \"shellos\",\r\n  \"gastrodon\",\r\n  \"ambipom\",\r\n  \"drifloon\",\r\n  \"drifblim\",\r\n  \"buneary\",\r\n  \"lopunny\",\r\n  \"mismagius\",\r\n  \"honchkrow\",\r\n  \"glameow\",\r\n  \"purugly\",\r\n  \"chingling\",\r\n  \"stunky\",\r\n  \"skuntank\",\r\n  \"bronzor\",\r\n  \"bronzong\",\r\n  \"bonsly\",\r\n  \"mime-jr\",\r\n  \"happiny\",\r\n  \"chatot\",\r\n  \"spiritomb\",\r\n  \"gible\",\r\n  \"gabite\",\r\n  \"garchomp\",\r\n  \"munchlax\",\r\n  \"riolu\",\r\n  \"lucario\",\r\n  \"hippopotas\",\r\n  \"hippowdon\",\r\n  \"skorupi\",\r\n  \"drapion\",\r\n  \"croagunk\",\r\n  \"toxicroak\",\r\n  \"carnivine\",\r\n  \"finneon\",\r\n  \"lumineon\",\r\n  \"mantyke\",\r\n  \"snover\",\r\n  \"abomasnow\",\r\n  \"weavile\",\r\n  \"magnezone\",\r\n  \"lickilicky\",\r\n  \"rhyperior\",\r\n  \"tangrowth\",\r\n  \"electivire\",\r\n  \"magmortar\",\r\n  \"togekiss\",\r\n  \"yanmega\",\r\n  \"leafeon\",\r\n  \"glaceon\",\r\n  \"gliscor\",\r\n  \"mamoswine\",\r\n  \"porygon-z\",\r\n  \"gallade\",\r\n  \"probopass\",\r\n  \"dusknoir\",\r\n  \"froslass\",\r\n  \"rotom\",\r\n  \"uxie\",\r\n  \"mesprit\",\r\n  \"azelf\",\r\n  \"dialga\",\r\n  \"palkia\",\r\n  \"heatran\",\r\n  \"regigigas\",\r\n  \"giratina-altered\",\r\n  \"cresselia\",\r\n  \"phione\",\r\n  \"manaphy\",\r\n  \"darkrai\",\r\n  \"shaymin-land\",\r\n  \"arceus\",\r\n  \"victini\",\r\n  \"snivy\",\r\n  \"servine\",\r\n  \"serperior\",\r\n  \"tepig\",\r\n  \"pignite\",\r\n  \"emboar\",\r\n  \"oshawott\",\r\n  \"dewott\",\r\n  \"samurott\",\r\n  \"patrat\",\r\n  \"watchog\",\r\n  \"lillipup\",\r\n  \"herdier\",\r\n  \"stoutland\",\r\n  \"purrloin\",\r\n  \"liepard\",\r\n  \"pansage\",\r\n  \"simisage\",\r\n  \"pansear\",\r\n  \"simisear\",\r\n  \"panpour\",\r\n  \"simipour\",\r\n  \"munna\",\r\n  \"musharna\",\r\n  \"pidove\",\r\n  \"tranquill\",\r\n  \"unfezant\",\r\n  \"blitzle\",\r\n  \"zebstrika\",\r\n  \"roggenrola\",\r\n  \"boldore\",\r\n  \"gigalith\",\r\n  \"woobat\",\r\n  \"swoobat\",\r\n  \"drilbur\",\r\n  \"excadrill\",\r\n  \"audino\",\r\n  \"timburr\",\r\n  \"gurdurr\",\r\n  \"conkeldurr\",\r\n  \"tympole\",\r\n  \"palpitoad\",\r\n  \"seismitoad\",\r\n  \"throh\",\r\n  \"sawk\",\r\n  \"sewaddle\",\r\n  \"swadloon\",\r\n  \"leavanny\",\r\n  \"venipede\",\r\n  \"whirlipede\",\r\n  \"scolipede\",\r\n  \"cottonee\",\r\n  \"whimsicott\",\r\n  \"petilil\",\r\n  \"lilligant\",\r\n  \"basculin-red-striped\",\r\n  \"sandile\",\r\n  \"krokorok\",\r\n  \"krookodile\",\r\n  \"darumaka\",\r\n  \"darmanitan-standard\",\r\n  \"maractus\",\r\n  \"dwebble\",\r\n  \"crustle\",\r\n  \"scraggy\",\r\n  \"scrafty\",\r\n  \"sigilyph\",\r\n  \"yamask\",\r\n  \"cofagrigus\",\r\n  \"tirtouga\",\r\n  \"carracosta\",\r\n  \"archen\",\r\n  \"archeops\",\r\n  \"trubbish\",\r\n  \"garbodor\",\r\n  \"zorua\",\r\n  \"zoroark\",\r\n  \"minccino\",\r\n  \"cinccino\",\r\n  \"gothita\",\r\n  \"gothorita\",\r\n  \"gothitelle\",\r\n  \"solosis\",\r\n  \"duosion\",\r\n  \"reuniclus\",\r\n  \"ducklett\",\r\n  \"swanna\",\r\n  \"vanillite\",\r\n  \"vanillish\",\r\n  \"vanilluxe\",\r\n  \"deerling\",\r\n  \"sawsbuck\",\r\n  \"emolga\",\r\n  \"karrablast\",\r\n  \"escavalier\",\r\n  \"foongus\",\r\n  \"amoonguss\",\r\n  \"frillish\",\r\n  \"jellicent\",\r\n  \"alomomola\",\r\n  \"joltik\",\r\n  \"galvantula\",\r\n  \"ferroseed\",\r\n  \"ferrothorn\",\r\n  \"klink\",\r\n  \"klang\",\r\n  \"klinklang\",\r\n  \"tynamo\",\r\n  \"eelektrik\",\r\n  \"eelektross\",\r\n  \"elgyem\",\r\n  \"beheeyem\",\r\n  \"litwick\",\r\n  \"lampent\",\r\n  \"chandelure\",\r\n  \"axew\",\r\n  \"fraxure\",\r\n  \"haxorus\",\r\n  \"cubchoo\",\r\n  \"beartic\",\r\n  \"cryogonal\",\r\n  \"shelmet\",\r\n  \"accelgor\",\r\n  \"stunfisk\",\r\n  \"mienfoo\",\r\n  \"mienshao\",\r\n  \"druddigon\",\r\n  \"golett\",\r\n  \"golurk\",\r\n  \"pawniard\",\r\n  \"bisharp\",\r\n  \"bouffalant\",\r\n  \"rufflet\",\r\n  \"braviary\",\r\n  \"vullaby\",\r\n  \"mandibuzz\",\r\n  \"heatmor\",\r\n  \"durant\",\r\n  \"deino\",\r\n  \"zweilous\",\r\n  \"hydreigon\",\r\n  \"larvesta\",\r\n  \"volcarona\",\r\n  \"cobalion\",\r\n  \"terrakion\",\r\n  \"virizion\",\r\n  \"tornadus-incarnate\",\r\n  \"thundurus-incarnate\",\r\n  \"reshiram\",\r\n  \"zekrom\",\r\n  \"landorus-incarnate\",\r\n  \"kyurem\",\r\n  \"keldeo-ordinary\",\r\n  \"meloetta-aria\",\r\n  \"genesect\",\r\n  \"chespin\",\r\n  \"quilladin\",\r\n  \"chesnaught\",\r\n  \"fennekin\",\r\n  \"braixen\",\r\n  \"delphox\",\r\n  \"froakie\",\r\n  \"frogadier\",\r\n  \"greninja\",\r\n  \"bunnelby\",\r\n  \"diggersby\",\r\n  \"fletchling\",\r\n  \"fletchinder\",\r\n  \"talonflame\",\r\n  \"scatterbug\",\r\n  \"spewpa\",\r\n  \"vivillon\",\r\n  \"litleo\",\r\n  \"pyroar\",\r\n  \"flabebe\",\r\n  \"floette\",\r\n  \"florges\",\r\n  \"skiddo\",\r\n  \"gogoat\",\r\n  \"pancham\",\r\n  \"pangoro\",\r\n  \"furfrou\",\r\n  \"espurr\",\r\n  \"meowstic-male\",\r\n  \"honedge\",\r\n  \"doublade\",\r\n  \"aegislash-shield\",\r\n  \"spritzee\",\r\n  \"aromatisse\",\r\n  \"swirlix\",\r\n  \"slurpuff\",\r\n  \"inkay\",\r\n  \"malamar\",\r\n  \"binacle\",\r\n  \"barbaracle\",\r\n  \"skrelp\",\r\n  \"dragalge\",\r\n  \"clauncher\",\r\n  \"clawitzer\",\r\n  \"helioptile\",\r\n  \"heliolisk\",\r\n  \"tyrunt\",\r\n  \"tyrantrum\",\r\n  \"amaura\",\r\n  \"aurorus\",\r\n  \"sylveon\",\r\n  \"hawlucha\",\r\n  \"dedenne\",\r\n  \"carbink\",\r\n  \"goomy\",\r\n  \"sliggoo\",\r\n  \"goodra\",\r\n  \"klefki\",\r\n  \"phantump\",\r\n  \"trevenant\",\r\n  \"pumpkaboo-average\",\r\n  \"gourgeist-average\",\r\n  \"bergmite\",\r\n  \"avalugg\",\r\n  \"noibat\",\r\n  \"noivern\",\r\n  \"xerneas\",\r\n  \"yveltal\",\r\n  \"zygarde\",\r\n  \"diancie\",\r\n  \"hoopa\",\r\n  \"volcanion\",\r\n  \"rowlet\",\r\n  \"dartrix\",\r\n  \"decidueye\",\r\n  \"litten\",\r\n  \"torracat\",\r\n  \"incineroar\",\r\n  \"popplio\",\r\n  \"brionne\",\r\n  \"primarina\",\r\n  \"pikipek\",\r\n  \"trumbeak\",\r\n  \"toucannon\",\r\n  \"yungoos\",\r\n  \"gumshoos\",\r\n  \"grubbin\",\r\n  \"charjabug\",\r\n  \"vikavolt\",\r\n  \"crabrawler\",\r\n  \"crabominable\",\r\n  \"oricorio-baile\",\r\n  \"cutiefly\",\r\n  \"ribombee\",\r\n  \"rockruff\",\r\n  \"lycanroc-midday\",\r\n  \"wishiwashi-solo\",\r\n  \"mareanie\",\r\n  \"toxapex\",\r\n  \"mudbray\",\r\n  \"mudsdale\",\r\n  \"dewpider\",\r\n  \"araquanid\",\r\n  \"fomantis\",\r\n  \"lurantis\",\r\n  \"morelull\",\r\n  \"shiinotic\",\r\n  \"salandit\",\r\n  \"salazzle\",\r\n  \"stufful\",\r\n  \"bewear\",\r\n  \"bounsweet\",\r\n  \"steenee\",\r\n  \"tsareena\",\r\n  \"comfey\",\r\n  \"oranguru\",\r\n  \"passimian\",\r\n  \"wimpod\",\r\n  \"golisopod\",\r\n  \"sandygast\",\r\n  \"palossand\",\r\n  \"pyukumuku\",\r\n  \"type-null\",\r\n  \"silvally\",\r\n  \"minior-red-meteor\",\r\n  \"komala\",\r\n  \"turtonator\",\r\n  \"togedemaru\",\r\n  \"mimikyu-disguised\",\r\n  \"bruxish\",\r\n  \"drampa\",\r\n  \"dhelmise\",\r\n  \"jangmo-o\",\r\n  \"hakamo-o\",\r\n  \"kommo-o\",\r\n  \"tapu-koko\",\r\n  \"tapu-lele\",\r\n  \"tapu-bulu\",\r\n  \"tapu-fini\",\r\n  \"cosmog\",\r\n  \"cosmoem\",\r\n  \"solgaleo\",\r\n  \"lunala\",\r\n  \"nihilego\",\r\n  \"buzzwole\",\r\n  \"pheromosa\",\r\n  \"xurkitree\",\r\n  \"celesteela\",\r\n  \"kartana\",\r\n  \"guzzlord\",\r\n  \"necrozma\",\r\n  \"magearna\",\r\n  \"marshadow\",\r\n  \"poipole\",\r\n  \"naganadel\",\r\n  \"stakataka\",\r\n  \"blacephalon\",\r\n  \"zeraora\",\r\n  \"meltan\",\r\n  \"melmetal\",\r\n  \"grookey\",\r\n  \"thwackey\",\r\n  \"rillaboom\",\r\n  \"scorbunny\",\r\n  \"raboot\",\r\n  \"cinderace\",\r\n  \"sobble\",\r\n  \"drizzile\",\r\n  \"inteleon\",\r\n  \"skwovet\",\r\n  \"greedent\",\r\n  \"rookidee\",\r\n  \"corvisquire\",\r\n  \"corviknight\",\r\n  \"blipbug\",\r\n  \"dottler\",\r\n  \"orbeetle\",\r\n  \"nickit\",\r\n  \"thievul\",\r\n  \"gossifleur\",\r\n  \"eldegoss\",\r\n  \"wooloo\",\r\n  \"dubwool\",\r\n  \"chewtle\",\r\n  \"drednaw\",\r\n  \"yamper\",\r\n  \"boltund\",\r\n  \"rolycoly\",\r\n  \"carkol\",\r\n  \"coalossal\",\r\n  \"applin\",\r\n  \"flapple\",\r\n  \"appletun\",\r\n  \"silicobra\",\r\n  \"sandaconda\",\r\n  \"cramorant\",\r\n  \"arrokuda\",\r\n  \"barraskewda\",\r\n  \"toxel\",\r\n  \"toxtricity-amped\",\r\n  \"sizzlipede\",\r\n  \"centiskorch\",\r\n  \"clobbopus\",\r\n  \"grapploct\",\r\n  \"sinistea\",\r\n  \"polteageist\",\r\n  \"hatenna\",\r\n  \"hattrem\",\r\n  \"hatterene\",\r\n  \"impidimp\",\r\n  \"morgrem\",\r\n  \"grimmsnarl\",\r\n  \"obstagoon\",\r\n  \"perrserker\",\r\n  \"cursola\",\r\n  \"sirfetchd\",\r\n  \"mr-rime\",\r\n  \"runerigus\",\r\n  \"milcery\",\r\n  \"alcremie\",\r\n  \"falinks\",\r\n  \"pincurchin\",\r\n  \"snom\",\r\n  \"frosmoth\",\r\n  \"stonjourner\",\r\n  \"eiscue-ice\",\r\n  \"indeedee-male\",\r\n  \"morpeko\",\r\n  \"cufant\",\r\n  \"copperajah\",\r\n  \"dracozolt\",\r\n  \"arctozolt\",\r\n  \"dracovish\",\r\n  \"arctovish\",\r\n  \"duraludon\",\r\n  \"dreepy\",\r\n  \"drakloak\",\r\n  \"dragapult\",\r\n  \"zacian-hero\",\r\n  \"zamazenta-hero\",\r\n  \"eternatus\",\r\n  \"kubfu\",\r\n  \"urshifu-single-strike\",\r\n  \"zarude\",\r\n  \"regieleki\",\r\n  \"regidrago\",\r\n  \"glastrier\",\r\n  \"spectrier\",\r\n  \"calyrex\",\r\n];\r\n","import React, { useState } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { Input } from \"@chakra-ui/react\";\r\nimport FilterOptions from \"../FilterOptions\";\r\nimport { Autocomplete } from \"@material-ui/lab\";\r\nimport { PokemonNames } from \"../../utils/pokemonNames\";\r\nimport { TextField } from \"@material-ui/core\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { useTheme } from \"../../theme/theme\";\r\n\r\nconst Container = styled.div`\r\n  width: 100%;\r\n  max-width: 500px;\r\n  display: flex;\r\n  justify-content: space-between;\r\n`;\r\n\r\nconst Search = () => {\r\n  const [value, setValue] = useState<string | null>(\"\");\r\n  const [inputValue, setInputValue] = useState(\"\");\r\n  const history = useHistory();\r\n\r\n  return (\r\n    <Container>\r\n      <Autocomplete\r\n        style={{\r\n          width: \"100%\",\r\n          maxWidth: \"300px\",\r\n        }}\r\n        value={value}\r\n        onChange={(event, newValue) => {\r\n          setValue(newValue);\r\n          newValue && history.push(`/pokemon/${newValue}`);\r\n        }}\r\n        inputValue={inputValue}\r\n        onInputChange={(event, newInputValue) => {\r\n          setInputValue(newInputValue);\r\n        }}\r\n        options={PokemonNames}\r\n        getOptionLabel={(pokemon) => pokemon}\r\n        renderInput={(params) => (\r\n          <TextField\r\n            {...params}\r\n            variant=\"outlined\"\r\n            label=\"Search for a pokemon\"\r\n          />\r\n        )}\r\n      />\r\n\r\n      <FilterOptions />\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Search;\r\n","import * as React from \"react\";\r\nimport DarkModeToggle from \"react-dark-mode-toggle\";\r\nimport useStore from \"../../Store\";\r\n\r\nconst ThemeToggle = () => {\r\n  const darkMode = useStore((state) => state.darkMode);\r\n  const toggleDarkMode = useStore((state) => state.toggleDarkMode);\r\n  return (\r\n    <DarkModeToggle\r\n      size={60}\r\n      onChange={() => {\r\n        toggleDarkMode();\r\n      }}\r\n      checked={darkMode}\r\n    />\r\n  );\r\n};\r\n\r\nexport default ThemeToggle;\r\n","import useStore from \"../Store\";\r\n\r\nconst LIGHT = {\r\n  background: \"#fff\",\r\n  card: \"#e5e5e5\",\r\n  header: \"#a9e4ff\",\r\n  text: \"#222222\",\r\n};\r\n\r\nconst DARK = {\r\n  background: \"#222831\",\r\n  card: \"#393E46\",\r\n  header: \"#00ADB5\",\r\n  text: \"#EEEEEE\",\r\n};\r\n\r\nexport const useTheme = () => {\r\n  const darkMode = useStore((state) => state.darkMode);\r\n\r\n  return darkMode ? DARK : LIGHT;\r\n};\r\n","import * as React from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport pikachu from \"../../../assets/pikachu.gif\";\r\n\r\nconst Logo = () => {\r\n  const history = useHistory();\r\n  return (\r\n    <div\r\n      onClick={() => {\r\n        history.push({\r\n          pathname: \"/\",\r\n        });\r\n      }}\r\n      style={{\r\n        cursor: \"pointer\",\r\n      }}\r\n    >\r\n      <img height=\"75px\" width=\"75px\" src={pikachu} alt=\"logo\" />\r\n    </div>\r\n  );\r\n};\r\nexport default Logo;\r\n","export default \"__VITE_ASSET__07811bc6__\"","import * as React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport Search from \"./Search\";\r\nimport ThemeToggle from \"./ThemeToggle\";\r\nimport { useTheme } from \"../../theme/theme\";\r\nimport Logo from \"./Logo\";\r\n\r\nconst Container = styled.header`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: space-evenly;\r\n  background: ${({ theme }) => theme.header};\r\n  width: 100%;\r\n  padding: 1.25em;\r\n  z-index: 5;\r\n`;\r\n\r\nconst Header = () => {\r\n  const theme = useTheme();\r\n  return (\r\n    <Container theme={theme}>\r\n      <Logo />\r\n      <Search />\r\n      <ThemeToggle />\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","export type PokemonType = keyof typeof typeStyles;\r\n\r\nexport const typeStyles = {\r\n  grass: { emoji: \"🌿\", color: \"#009100\" },\r\n  water: { emoji: \"💦\", color: \"#005c91\" },\r\n  fire: { emoji: \"🔥\", color: \"#bb2c00\" },\r\n  ice: { emoji: \"🥶\", color: \"#008091\" },\r\n  fighting: { emoji: \"🥊\", color: \"#b90000\" },\r\n  poison: { emoji: \"☣\", color: \"#800091\" },\r\n  ground: { emoji: \"🥌\", color: \"#692100\" },\r\n  flying: { emoji: \"🐦\", color: \"#b90000\" },\r\n  psychic: { emoji: \"😵\", color: \"#e2c000\" },\r\n  electric: { emoji: \"⚡\", color: \"#e2c000\" },\r\n  bug: { emoji: \"🐞\", color: \"#000000\" },\r\n  rock: { emoji: \"🥌\", color: \"#505050\" },\r\n  ghost: { emoji: \"👻\", color: \"#6300a5\" },\r\n  dark: { emoji: \"🌑\", color: \"#161616\" },\r\n  dragon: { emoji: \"🐉\", color: \"#7ea100\" },\r\n  steel: { emoji: \"🔨\", color: \"#505050\" },\r\n  fairy: { emoji: \"👸\", color: \"#ff5d93\" },\r\n  normal: { emoji: \"😑\", color: \"#505050\" },\r\n};\r\n\r\nexport const pokemonTypes = Object.keys(typeStyles) as Array<PokemonType>;\r\n\r\nexport const getTypeEmoji = (pokemonType: string | undefined) => {\r\n  switch (pokemonType) {\r\n    case \"grass\":\r\n      return \"🌿\";\r\n    case \"water\":\r\n      return \"💦\";\r\n    case \"fire\":\r\n      return \"🔥\";\r\n    case \"electric\":\r\n      return \"⚡\";\r\n    case \"ice\":\r\n      return \"🧊\";\r\n    case \"fighting\":\r\n      return \"🥊\";\r\n    case \"poison\":\r\n      return \"☣\";\r\n    case \"ground\":\r\n      return \"🥌\";\r\n    case \"flying\":\r\n      return \"🐦\";\r\n    case \"psychic\":\r\n      return \"😵\";\r\n    case \"bug\":\r\n      return \"🐞\";\r\n    case \"rock\":\r\n      return \"🥌\";\r\n    case \"ghost\":\r\n      return \"👻\";\r\n    case \"dark\":\r\n      return \"🌑\";\r\n    case \"dragon\":\r\n      return \"🐉\";\r\n    case \"steel\":\r\n      return \"🔨\";\r\n    case \"fairy\":\r\n      return \"👸\";\r\n    case \"normal\":\r\n      return \"😑\";\r\n    default:\r\n      throw new Error(\"something went wrong here => getTypeEmojis.ts\");\r\n  }\r\n};\r\n","import * as React from \"react\";\r\nimport {\r\n  Box,\r\n  HStack,\r\n  useRadio,\r\n  useRadioGroup,\r\n  RadioProps,\r\n} from \"@chakra-ui/react\";\r\nimport { PokemonType, pokemonTypes, typeStyles } from \"../utils/pokemonTypes\";\r\nimport Color from \"color\";\r\n\r\nimport { motion } from \"framer-motion\";\r\nimport { useHistory, useLocation } from \"react-router-dom\";\r\n\r\nconst CheckBoxCard = (props: RadioProps) => {\r\n  const { getInputProps, getCheckboxProps } = useRadio(props);\r\n\r\n  const input = getInputProps();\r\n  const checkbox = getCheckboxProps();\r\n  const type = props.value as PokemonType;\r\n  console.log(\"COLOR\", { typeStyles, color: typeStyles[type], type });\r\n\r\n  return (\r\n    <Box as=\"label\">\r\n      <input {...input} />\r\n      <Box\r\n        {...checkbox}\r\n        cursor=\"pointer\"\r\n        borderWidth=\"2px\"\r\n        borderColor={Color(typeStyles[type].color).alpha(0.3).toString()}\r\n        color={Color(typeStyles[type].color).alpha(0.3).toString()}\r\n        borderRadius=\"xl\"\r\n        boxShadow=\"md\"\r\n        _checked={{\r\n          bg: Color(typeStyles[type].color).alpha(0.1).toString(),\r\n          color: typeStyles[type].color,\r\n          borderColor: typeStyles[type].color,\r\n        }}\r\n        px={3}\r\n        py={1.5}\r\n      >\r\n        {`${typeStyles[type].emoji} `}\r\n        {props.children}\r\n      </Box>\r\n    </Box>\r\n  );\r\n};\r\n\r\nconst TypeSelect = () => {\r\n  const types = pokemonTypes;\r\n  const history = useHistory();\r\n  const { search } = useLocation();\r\n  const params = new URLSearchParams(search);\r\n  const currentType = params.get(\"type\");\r\n  const { getRootProps: getRadioRootProps, getRadioProps } = useRadioGroup({\r\n    name: \"filters\",\r\n    value: currentType ?? \"fire\",\r\n    onChange: (val) => {\r\n      const params = new URLSearchParams({ type: val });\r\n\r\n      history.push({\r\n        pathname: \"/\",\r\n        search: params.toString(),\r\n      });\r\n    },\r\n  });\r\n\r\n  return (\r\n    <motion.div>\r\n      <HStack {...getRadioRootProps()}>\r\n        {types.map((value) => {\r\n          const radio = getRadioProps({ value });\r\n          return (\r\n            <CheckBoxCard key={value} value={value} {...radio}>\r\n              {value}\r\n            </CheckBoxCard>\r\n          );\r\n        })}\r\n      </HStack>\r\n    </motion.div>\r\n  );\r\n};\r\n\r\nexport default TypeSelect;\r\n","import * as React from \"react\";\r\nimport {\r\n  HStack,\r\n  Box,\r\n  RadioProps,\r\n  useRadio,\r\n  useRadioGroup,\r\n} from \"@chakra-ui/react\";\r\nimport { motion } from \"framer-motion\";\r\nimport { useHistory, useLocation } from \"react-router-dom\";\r\n\r\nconst variants = {\r\n  initial: {\r\n    y: -50,\r\n  },\r\n  animate: {\r\n    y: 0,\r\n  },\r\n  exit: {\r\n    y: -50,\r\n  },\r\n};\r\n\r\nconst RadioCard = (props: RadioProps) => {\r\n  const { getInputProps, getCheckboxProps } = useRadio(props);\r\n\r\n  const input = getInputProps();\r\n  const checkbox = getCheckboxProps();\r\n\r\n  return (\r\n    <Box as=\"label\">\r\n      <input {...input} />\r\n      <Box\r\n        {...checkbox}\r\n        bg=\"#fff\"\r\n        cursor=\"pointer\"\r\n        borderWidth=\"1px\"\r\n        borderRadius=\"md\"\r\n        boxShadow=\"md\"\r\n        _checked={{\r\n          bg: \"teal.600\",\r\n          color: \"white\",\r\n          borderColor: \"teal.600\",\r\n        }}\r\n        _focus={{\r\n          boxShadow: \"outline\",\r\n        }}\r\n        px={3}\r\n        py={1.5}\r\n      >\r\n        {props.children}\r\n      </Box>\r\n    </Box>\r\n  );\r\n};\r\n\r\nconst GenSelect = () => {\r\n  const generations = [\"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\"];\r\n  const { search } = useLocation();\r\n  const params = new URLSearchParams(search);\r\n  const currentGen = params.get(\"generation\");\r\n  const history = useHistory();\r\n\r\n  const { getRootProps: getRadioRootProps, getRadioProps } = useRadioGroup({\r\n    name: \"generation\",\r\n    defaultValue: \"1\",\r\n    value: currentGen ?? \"1\",\r\n    onChange: (val) => {\r\n      const params = new URLSearchParams({ generation: val });\r\n\r\n      history.push({\r\n        pathname: \"/\",\r\n        search: params.toString(),\r\n      });\r\n    },\r\n  });\r\n\r\n  return (\r\n    <motion.div\r\n    // variants={variants}\r\n    // initial=\"initial\"\r\n    // animate=\"animate\"\r\n    // exit=\"exit\"\r\n    >\r\n      <HStack {...getRadioRootProps()}>\r\n        {generations.map((value) => {\r\n          const radio = getRadioProps({ value });\r\n          return (\r\n            <RadioCard key={value} value={value} {...radio}>\r\n              {`Gen ${value}`}\r\n            </RadioCard>\r\n          );\r\n        })}\r\n      </HStack>\r\n    </motion.div>\r\n  );\r\n};\r\n\r\nexport default GenSelect;\r\n","import axios from \"axios\";\r\nimport { Pokemon } from \"../types\";\r\n\r\nconst usePokemon = async (pokemonName: string | undefined) => {\r\n  const { data } = await axios.get<Pokemon>(\r\n    `https://pokeapi.co/api/v2/pokemon/${pokemonName}`\r\n  );\r\n  return data;\r\n};\r\n\r\nexport default usePokemon;\r\n","import axios from \"axios\";\r\nimport * as React from \"react\";\r\nimport { useQuery } from \"react-query\";\r\nimport styled from \"styled-components\";\r\nimport { Pokemon } from \"../../types\";\r\nimport { Skeleton, SkeletonText } from \"@chakra-ui/react\";\r\nimport { useTheme } from \"../../theme/theme\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport usePokemon from \"../../hooks/usePokemon\";\r\nimport { motion } from \"framer-motion\";\r\n\r\nexport const BASE_SPRITE_URL =\r\n  \"https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/\";\r\n\r\nconst Card = styled(motion.div)`\r\n  background: ${({ theme }) => theme.card};\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  justify-content: center;\r\n  width: 220px;\r\n  min-height: 270px;\r\n  padding: 2em;\r\n  border-radius: 5px;\r\n  margin: 0em 0.75em 1.5em 0.75em;\r\n  box-shadow: 0 1px 3px rgba(0, 0, 0, 0.12), 0 1px 2px rgba(0, 0, 0, 0.24);\r\n  transition: all 0.3s cubic-bezier(0.25, 0.8, 0.25, 1);\r\n  cursor: pointer;\r\n  &:hover {\r\n    transform: scale(1.05);\r\n    box-shadow: 0 14px 28px rgba(0, 0, 0, 0.25), 0 10px 10px rgba(0, 0, 0, 0.22);\r\n  }\r\n  img {\r\n    height: 150px;\r\n    filter: drop-shadow(5px 5px 0.2em rgba(0, 0, 0, 0.5));\r\n  }\r\n  p {\r\n    font-family: \"Open Sans\", sans-serif;\r\n    font-size: 1.2rem;\r\n    font-weight: 600;\r\n    margin-top: 20px;\r\n    color: rgba(0, 0, 0, 0.8);\r\n  }\r\n  p:first-letter {\r\n    text-transform: capitalize;\r\n  }\r\n`;\r\n\r\ninterface Props {\r\n  title: string;\r\n  style?: React.CSSProperties;\r\n}\r\n\r\nconst PokeCard = (props: Props) => {\r\n  const { title } = props;\r\n  const { data, status } = useQuery(\r\n    [\"pokemon-img\", title],\r\n    ({ queryKey: [_, pokemonName] }) => usePokemon(pokemonName),\r\n    { enabled: Boolean(title) }\r\n  );\r\n  const imgUrl = BASE_SPRITE_URL + data?.id + \".png\";\r\n  const theme = useTheme();\r\n  const history = useHistory();\r\n\r\n  const handleClick = () => {\r\n    history.push({\r\n      pathname: `/pokemon/${title}`,\r\n    });\r\n  };\r\n\r\n  return (\r\n    <Card\r\n      layoutId=\"expandable-card\"\r\n      {...props}\r\n      theme={theme}\r\n      onClick={handleClick}\r\n    >\r\n      {status === \"loading\" && (\r\n        <>\r\n          <Skeleton style={{ borderRadius: \"35px\" }} h={100} w={100} />\r\n          <SkeletonText mt={35} w={100} noOfLines={1} />\r\n        </>\r\n      )}\r\n      {status === \"success\" && (\r\n        <>\r\n          <img src={imgUrl} alt=\"pokemong\" />\r\n          <p style={{ color: theme?.text }}>{title}</p>\r\n        </>\r\n      )}\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default PokeCard;\r\n","import * as React from \"react\";\r\nimport axios from \"axios\";\r\nimport { useQuery } from \"react-query\";\r\nimport PokeCard from \"./PokeCard\";\r\nimport styled from \"styled-components\";\r\nimport { PokemonGenResponse, PokemonTypeResponse } from \"../../types\";\r\nimport { motion } from \"framer-motion\";\r\nimport { Spinner } from \"@chakra-ui/react\";\r\n\r\ninterface QueryType {\r\n  queryKey: Array<any>;\r\n}\r\n\r\nconst fetchPokemons = async ({ queryKey }: QueryType) => {\r\n  const type = queryKey[1];\r\n  const gen = queryKey[2];\r\n\r\n  const { data } = !type\r\n    ? await axios.get<PokemonGenResponse>(\r\n        `https://pokeapi.co/api/v2/generation/${gen ?? \"1\"}`\r\n      )\r\n    : await axios.get<PokemonTypeResponse>(\r\n        `https://pokeapi.co/api/v2/type/${type}`\r\n      );\r\n  return data;\r\n};\r\n\r\nconst Container = styled(motion.div)`\r\n  display: flex;\r\n  justify-content: center;\r\n  flex-wrap: wrap;\r\n  margin-top: 1.5em;\r\n`;\r\n\r\nconst PokemonCards = () => {\r\n  const params = new URLSearchParams(location.search);\r\n  const pokemonType = params.get(\"type\");\r\n  const generation = params.get(\"generation\");\r\n\r\n  const { data, status } = useQuery(\r\n    [\"pokemons\", pokemonType, generation],\r\n    fetchPokemons\r\n  );\r\n  let rowCount = 0;\r\n\r\n  return (\r\n    <Container>\r\n      {status === \"loading\" && <Spinner size=\"lg\" thickness=\"4px\" mt=\"25vh\" />}\r\n      {!pokemonType &&\r\n        status === \"success\" &&\r\n        (data as PokemonGenResponse).pokemon_species.map((pokemon) => (\r\n          <PokeCard key={pokemon.name} title={pokemon.name} />\r\n        ))}\r\n      {pokemonType &&\r\n        status === \"success\" &&\r\n        (data as PokemonTypeResponse).pokemon.map((pokemon) => (\r\n          <PokeCard key={pokemon.pokemon.name} title={pokemon.pokemon.name} />\r\n        ))}\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default PokemonCards;\r\n","import styled from \"styled-components\";\r\nimport * as React from \"react\";\r\nimport { usePalette } from \"react-palette\";\r\nimport { Params, Pokemon } from \"../types\";\r\nimport { getTypeEmoji } from \"../utils/pokemonTypes\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { useQuery } from \"react-query\";\r\nimport usePokemon from \"../hooks/usePokemon\";\r\nimport { motion } from \"framer-motion\";\r\nimport { Skeleton, SkeletonText } from \"@chakra-ui/react\";\r\n\r\nconst BASE_IMG_URL =\r\n  \"https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/other/official-artwork/\";\r\n\r\nconst Card = styled(motion.div)`\r\n  display: flex;\r\n  flex-direction: column;\r\n  height: 550px;\r\n  width: 380px;\r\n  margin-top: 2em;\r\n  box-sizing: border-box;\r\n  border-radius: 15px;\r\n  box-shadow: 0 19px 38px rgba(0, 0, 0, 0.3), 0 15px 12px rgba(0, 0, 0, 0.22);\r\n  padding: 1em;\r\n`;\r\nconst Image = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  min-height: 240px;\r\n  width: 100%;\r\n  border-radius: 10px 10px 0px 0px;\r\n  img {\r\n    width: 200px;\r\n  }\r\n`;\r\nconst Title = styled.h2`\r\n  font-size: 1.75rem;\r\n  font-weight: 700;\r\n  margin-top: 0.5em;\r\n  color: rgba(0, 0, 0, 0.8);\r\n  text-transform: capitalize;\r\n`;\r\n\r\nconst StatsTable = styled.table`\r\n  width: 50%;\r\n  margin-top: 1em;\r\n  td {\r\n    color: rgba(0, 0, 0, 8);\r\n  }\r\n`;\r\n\r\nconst InfoContainer = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  background: rgba(f, f, f, f.8);\r\n  backdrop-filter: saturate(180%) blur(10px);\r\n  width: 100%;\r\n  height: 100%;\r\n  border-radius: 15px;\r\n  border: 4px solid rgba(0, 0, 0, 0.5);\r\n`;\r\n\r\ninterface Props {\r\n  name: string | null;\r\n  pokemon: Pokemon;\r\n  url: string;\r\n}\r\n\r\nconst PokemonCardEx = () => {\r\n  const { name } = useParams<Params>();\r\n\r\n  const { data, status } = useQuery(\r\n    [\"pokemon-img\", name],\r\n    ({ queryKey: [_, pokemonName] }) => usePokemon(pokemonName),\r\n    { enabled: Boolean(name) }\r\n  );\r\n  const url = BASE_IMG_URL + data?.id + \".png\";\r\n\r\n  const { data: palleteData, loading, error } = usePalette(url);\r\n  // const { stats } = data;\r\n\r\n  return (\r\n    <Card\r\n      layoutId=\"expandable-card\"\r\n      style={{\r\n        background: `linear-gradient(${palleteData.lightMuted}, ${palleteData.lightVibrant})`,\r\n      }}\r\n    >\r\n      <InfoContainer>\r\n        <Image\r\n          style={{\r\n            background: `linear-gradient(${palleteData.darkMuted}, ${palleteData.darkVibrant})`,\r\n          }}\r\n        >\r\n          {status === \"loading\" ? (\r\n            <Skeleton\r\n              opacity={0.2}\r\n              borderRadius=\"25px\"\r\n              height=\"150px\"\r\n              width=\"150px\"\r\n            />\r\n          ) : (\r\n            <img src={url} />\r\n          )}\r\n        </Image>\r\n        {status === \"loading\" ? (\r\n          <Skeleton\r\n            opacity={0.1}\r\n            borderRadius=\"10px\"\r\n            mt={5}\r\n            height=\"40px\"\r\n            width=\"200px\"\r\n          />\r\n        ) : (\r\n          <Title>{data?.name}</Title>\r\n        )}\r\n        {status === \"loading\" ? (\r\n          <SkeletonText\r\n            opacity={0.2}\r\n            noOfLines={8}\r\n            width=\"275px\"\r\n            mt={5}\r\n            spacing={3}\r\n          />\r\n        ) : (\r\n          <StatsTable cellPadding=\"2em\">\r\n            {data?.stats.map((stat) => (\r\n              <tr>\r\n                <td style={{ fontWeight: 500, textTransform: \"capitalize\" }}>\r\n                  {stat.stat.name}\r\n                </td>\r\n                <td style={{ textAlign: \"center\" }}>{stat.base_stat}</td>\r\n              </tr>\r\n            ))}\r\n          </StatsTable>\r\n        )}\r\n      </InfoContainer>\r\n    </Card>\r\n  );\r\n};\r\nexport default PokemonCardEx;\r\n","import * as React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport TypeSelect from \"../TypeSelect\";\r\nimport GenSelect from \"../GenSelect\";\r\nimport PokemonCards from \"./PokeCards\";\r\nimport { AnimatePresence, AnimateSharedLayout, motion } from \"framer-motion\";\r\nimport { useTheme } from \"../../theme/theme\";\r\nimport {\r\n  Route,\r\n  Router,\r\n  Switch,\r\n  useHistory,\r\n  useLocation,\r\n} from \"react-router-dom\";\r\nimport useStore from \"../../Store\";\r\nimport PokemonCardEx from \"../PokeCardEx\";\r\n\r\nconst Container = styled.main`\r\n  background: ${({ theme }) => theme.background};\r\n  display: flex;\r\n  flex-direction: column;\r\n  padding: 1.5em 4em;\r\n  align-items: center;\r\n  min-height: 100vh;\r\n`;\r\nconst Main = () => {\r\n  const theme = useTheme();\r\n  const history = useHistory();\r\n  const filter = useStore((state) => state.filter);\r\n  const params = new URLSearchParams(useLocation().search).toString();\r\n  return (\r\n    <Container theme={theme}>\r\n      {params.includes(\"type\") && <TypeSelect />}\r\n      {params.includes(\"generation\") && <GenSelect />}\r\n      <Router history={history}>\r\n        <Switch>\r\n          <Route path=\"/\" exact component={PokemonCards} />\r\n\r\n          <Route path=\"/pokemon/:name\" component={PokemonCardEx} />\r\n        </Switch>\r\n      </Router>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Main;\r\n","import React, { useEffect } from \"react\";\r\nimport \"./App.css\";\r\nimport { QueryClient, QueryClientProvider } from \"react-query\";\r\nimport { ChakraProvider } from \"@chakra-ui/react\";\r\nimport { ReactQueryDevtools } from \"react-query/devtools\";\r\nimport Header from \"./components/Header/Header\";\r\nimport Main from \"./components/Main/Main\";\r\nimport useStore from \"./Store\";\r\n\r\nconst queryClient = new QueryClient();\r\n\r\nfunction App() {\r\n  const setDarkMode = useStore((state) => state.setDarkMode);\r\n\r\n  useEffect(() => {\r\n    const isDarkMode = localStorage.getItem(\"darkMode\");\r\n    isDarkMode === \"1\" ? setDarkMode(true) : setDarkMode(false);\r\n  });\r\n\r\n  return (\r\n    <QueryClientProvider client={queryClient}>\r\n      <ChakraProvider>\r\n        <div className=\"App\">\r\n          <Header />\r\n          <Main />\r\n        </div>\r\n      </ChakraProvider>\r\n      <ReactQueryDevtools initialIsOpen={false} />\r\n    </QueryClientProvider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport { BrowserRouter as Router } from \"react-router-dom\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Router basename=\"/pokedex\">\r\n      <App />\r\n    </Router>\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"names":["useStore","create","set","get","filter","setFilter","darkMode","toggleDarkMode","isDarkMode","setItem","setDarkMode","RadioCard","props","getInputProps","getCheckboxProps","useRadio","input","checkbox","Box","as","__spreadValues","__spreadProps","bg","cursor","borderWidth","borderRadius","boxShadow","_checked","color","borderColor","_focus","px","py","textTransform","children","FilterOptions","state","history","useHistory","params","URLSearchParams","useLocation","search","toString","getRootProps","getRadioRootProps","getRadioProps","useRadioGroup","name","value","param","includes","onChange","val","params2","type","generation","push","pathname","HStack","map","radio","key","PokemonNames","Container","styled","div","Search","setValue","useState","inputValue","setInputValue","Autocomplete","style","width","maxWidth","event","newValue","onInputChange","newInputValue","options","getOptionLabel","pokemon","renderInput","TextField","variant","label","ThemeToggle","DarkModeToggle","size","checked","LIGHT","background","card","header","text","DARK","useTheme","Logo","onClick","height","src","alt","theme","Header","typeStyles","grass","emoji","water","fire","ice","fighting","poison","ground","flying","psychic","electric","bug","rock","ghost","dark","dragon","steel","fairy","normal","pokemonTypes","Object","keys","CheckBoxCard","log","Color","alpha","TypeSelect","types","currentType","motion","GenSelect","currentGen","defaultValue","usePokemon","async","pokemonName","data","axios","Card","PokeCard","title","status","useQuery","queryKey","_","enabled","Boolean","imgUrl","id","layoutId","Skeleton","h","w","SkeletonText","mt","noOfLines","fetchPokemons","gen","PokemonCards","location","pokemonType","Spinner","thickness","pokemon_species","Image","Title","h2","StatsTable","table","InfoContainer","PokemonCardEx","useParams","url","palleteData","loading","error","usePalette","lightMuted","lightVibrant","darkMuted","darkVibrant","opacity","spacing","cellPadding","stats","stat","fontWeight","textAlign","base_stat","main","Main","Router","Switch","Route","path","exact","component","queryClient","QueryClient","localStorage","getItem","QueryClientProvider","client","ChakraProvider","className","ReactQueryDevtools","initialIsOpen","ReactDOM","render","React","StrictMode","basename","App","document","getElementById"],"mappings":"8oBAYA,MAAMA,EAAWC,GACf,CAACC,EAAsBC,MACrBC,OAAQ,KACRC,UAAYD,GAAmBF,EAAI,CAAEE,OAAAA,IACrCE,UAAU,EACVC,eAAgB,WACND,SAAUE,GAAeL,iBACpBM,QAAQ,WAAYD,EAAa,IAAM,OAChD,CAAEF,UAAWE,KAEnBE,YAAcF,MACR,CAAEF,SAAUE,SCZhBG,EAAaC,UACXC,cAAEA,mBAAeC,GAAqBC,EAASH,GAE/CI,EAAQH,IACRI,EAAWH,mCAGdI,EAAD,CAAKC,GAAG,iCACL,QAADC,KAAWJ,4BACVE,EAADG,OACMJ,GADN,CAEEK,GAAG,OACHC,OAAO,UACPC,YAAY,MACZC,aAAa,KACbC,UAAU,KACVC,SAAU,CACRL,GAAI,WACJM,MAAO,QACPC,YAAa,YAEfC,OAAQ,CACNJ,UAAW,WAEbK,GAAI,EACJC,GAAI,IACJC,cAAc,eAEbrB,EAAMsB,YAYTC,EAAgB,QACQC,GAAUA,EAAM/B,kBAEtCgC,EAAUC,IACVC,EAAS,IAAIC,gBAAgBC,IAAcC,QAAQC,YAEjDC,aAAcC,gBAAmBC,GAAkBC,EAAc,CACvEC,KAAM,eACNC,OAdoBC,EAcEX,EAbpBW,EAAMC,SAAS,QAAgB,OAC1BD,EAAMC,SAAS,cAAsB,aAClC,IAYVC,SAAWC,UACHC,EAAS,IAAId,gBACT,SAARa,EAAiB,CAAEE,KAAM,SAAY,CAAEC,WAAY,QAE7CC,KAAK,CACXC,SAAU,IACVhB,OAAQY,EAAOX,gBArBA,IAACO,iCA2BnBS,EAADvC,KAAYyB,KAnBE,CAAC,OAAQ,cAoBZe,KAAKX,UACNY,EAAQf,EAAc,CAAEG,MAAAA,mCAE3BtC,EAADS,GAAW0C,IAAKb,GAAWY,GACxBZ,QC7EAc,EAAe,CAC1B,YACA,UACA,WACA,aACA,aACA,YACA,WACA,YACA,YACA,WACA,UACA,aACA,SACA,SACA,WACA,SACA,YACA,UACA,UACA,WACA,UACA,SACA,QACA,QACA,UACA,SACA,YACA,YACA,YACA,WACA,YACA,YACA,WACA,WACA,WACA,WACA,SACA,YACA,aACA,aACA,QACA,SACA,SACA,QACA,YACA,QACA,WACA,UACA,WACA,UACA,UACA,SACA,UACA,UACA,UACA,SACA,WACA,YACA,WACA,UACA,YACA,YACA,OACA,UACA,WACA,SACA,UACA,UACA,aACA,aACA,aACA,YACA,aACA,UACA,WACA,QACA,SACA,WACA,WACA,UACA,YACA,WACA,YACA,QACA,SACA,OACA,UACA,SACA,MACA,WACA,WACA,SACA,UACA,SACA,OACA,UACA,QACA,SACA,UACA,UACA,YACA,YACA,YACA,SACA,UACA,YACA,aACA,YACA,UACA,UACA,UACA,SACA,UACA,UACA,aACA,SACA,SACA,UACA,UACA,SACA,UACA,UACA,UACA,OACA,aACA,SACA,SACA,SACA,WACA,WACA,SACA,QACA,QACA,WACA,UACA,UACA,UACA,UACA,UACA,SACA,WACA,aACA,UACA,WACA,SACA,UACA,UACA,YACA,YACA,SACA,MACA,YACA,UACA,WACA,YACA,UACA,aACA,WACA,WACA,aACA,UACA,SACA,WACA,UACA,SACA,SACA,WACA,UACA,SACA,WACA,UACA,QACA,SACA,YACA,SACA,UACA,OACA,OACA,SACA,UACA,WACA,YACA,SACA,YACA,YACA,WACA,SACA,WACA,WACA,QACA,UACA,WACA,QACA,SACA,WACA,SACA,UACA,UACA,WACA,aACA,QACA,YACA,YACA,SACA,aACA,YACA,SACA,UACA,WACA,WACA,WACA,SACA,UACA,YACA,UACA,YACA,WACA,SACA,WACA,SACA,YACA,UACA,WACA,YACA,WACA,UACA,WACA,WACA,WACA,UACA,SACA,UACA,WACA,WACA,WACA,UACA,YACA,WACA,SACA,QACA,UACA,UACA,SACA,QACA,UACA,WACA,UACA,YACA,QACA,QACA,SACA,UACA,UACA,WACA,UACA,YACA,WACA,SACA,YACA,WACA,YACA,YACA,YACA,UACA,UACA,UACA,YACA,UACA,SACA,QACA,SACA,WACA,SACA,UACA,UACA,UACA,UACA,UACA,WACA,QACA,SACA,YACA,UACA,aACA,YACA,UACA,UACA,WACA,UACA,UACA,UACA,WACA,UACA,UACA,UACA,WACA,WACA,UACA,WACA,SACA,WACA,UACA,SACA,OACA,SACA,SACA,WACA,WACA,YACA,YACA,SACA,QACA,UACA,WACA,UACA,SACA,SACA,WACA,WACA,UACA,UACA,QACA,WACA,UACA,SACA,UACA,SACA,WACA,UACA,SACA,SACA,WACA,SACA,UACA,WACA,UACA,WACA,UACA,WACA,WACA,WACA,YACA,SACA,UACA,SACA,UACA,UACA,UACA,SACA,UACA,WACA,UACA,UACA,UACA,UACA,WACA,UACA,WACA,QACA,SACA,UACA,SACA,SACA,SACA,UACA,WACA,UACA,WACA,YACA,UACA,QACA,UACA,YACA,SACA,SACA,YACA,WACA,SACA,YACA,SACA,SACA,SACA,UACA,WACA,UACA,gBACA,UACA,SACA,WACA,WACA,WACA,YACA,SACA,WACA,WACA,SACA,WACA,YACA,SACA,UACA,YACA,aACA,QACA,QACA,SACA,QACA,WACA,WACA,YACA,WACA,YACA,QACA,iBACA,SACA,SACA,YACA,YACA,SACA,WACA,UACA,UACA,UACA,YACA,UACA,WACA,WACA,UACA,UACA,YACA,YACA,UACA,UACA,YACA,SACA,WACA,UACA,WACA,SACA,UACA,UACA,SACA,YACA,QACA,SACA,WACA,WACA,QACA,UACA,aACA,YACA,UACA,UACA,WACA,YACA,YACA,UACA,WACA,UACA,SACA,YACA,UACA,YACA,aACA,YACA,YACA,aACA,YACA,WACA,UACA,UACA,UACA,UACA,YACA,YACA,UACA,YACA,WACA,WACA,QACA,OACA,UACA,QACA,SACA,SACA,UACA,YACA,mBACA,YACA,SACA,UACA,UACA,eACA,SACA,UACA,QACA,UACA,YACA,QACA,UACA,SACA,WACA,SACA,WACA,SACA,UACA,WACA,UACA,YACA,WACA,UACA,UACA,WACA,UACA,WACA,UACA,WACA,QACA,WACA,SACA,YACA,WACA,UACA,YACA,aACA,UACA,WACA,SACA,UACA,UACA,YACA,SACA,UACA,UACA,aACA,UACA,YACA,aACA,QACA,OACA,WACA,WACA,WACA,WACA,aACA,YACA,WACA,aACA,UACA,YACA,uBACA,UACA,WACA,aACA,WACA,sBACA,WACA,UACA,UACA,UACA,UACA,WACA,SACA,aACA,WACA,aACA,SACA,WACA,WACA,WACA,QACA,UACA,WACA,WACA,UACA,YACA,aACA,UACA,UACA,YACA,WACA,SACA,YACA,YACA,YACA,WACA,WACA,SACA,aACA,aACA,UACA,YACA,WACA,YACA,YACA,SACA,aACA,YACA,aACA,QACA,QACA,YACA,SACA,YACA,aACA,SACA,WACA,UACA,UACA,aACA,OACA,UACA,UACA,UACA,UACA,YACA,UACA,WACA,WACA,UACA,WACA,YACA,SACA,SACA,WACA,UACA,aACA,UACA,WACA,UACA,YACA,UACA,SACA,QACA,WACA,YACA,WACA,YACA,WACA,YACA,WACA,qBACA,sBACA,WACA,SACA,qBACA,SACA,kBACA,gBACA,WACA,UACA,YACA,aACA,WACA,UACA,UACA,UACA,YACA,WACA,WACA,YACA,aACA,cACA,aACA,aACA,SACA,WACA,SACA,SACA,UACA,UACA,UACA,SACA,SACA,UACA,UACA,UACA,SACA,gBACA,UACA,WACA,mBACA,WACA,aACA,UACA,WACA,QACA,UACA,UACA,aACA,SACA,WACA,YACA,YACA,aACA,YACA,SACA,YACA,SACA,UACA,UACA,WACA,UACA,UACA,QACA,UACA,SACA,SACA,WACA,YACA,oBACA,oBACA,WACA,UACA,SACA,UACA,UACA,UACA,UACA,UACA,QACA,YACA,SACA,UACA,YACA,SACA,WACA,aACA,UACA,UACA,YACA,UACA,WACA,YACA,UACA,WACA,UACA,YACA,WACA,aACA,eACA,iBACA,WACA,WACA,WACA,kBACA,kBACA,WACA,UACA,UACA,WACA,WACA,YACA,WACA,WACA,WACA,YACA,WACA,WACA,UACA,SACA,YACA,UACA,WACA,SACA,WACA,YACA,SACA,YACA,YACA,YACA,YACA,YACA,WACA,oBACA,SACA,aACA,aACA,oBACA,UACA,SACA,WACA,WACA,WACA,UACA,YACA,YACA,YACA,YACA,SACA,UACA,WACA,SACA,WACA,WACA,YACA,YACA,aACA,UACA,WACA,WACA,WACA,YACA,UACA,YACA,YACA,cACA,UACA,SACA,WACA,UACA,WACA,YACA,YACA,SACA,YACA,SACA,WACA,WACA,UACA,WACA,WACA,cACA,cACA,UACA,UACA,WACA,SACA,UACA,aACA,WACA,SACA,UACA,UACA,UACA,SACA,UACA,WACA,SACA,YACA,SACA,UACA,WACA,YACA,aACA,YACA,WACA,cACA,QACA,mBACA,aACA,cACA,YACA,YACA,WACA,cACA,UACA,UACA,YACA,WACA,UACA,aACA,YACA,aACA,UACA,YACA,UACA,YACA,UACA,WACA,UACA,aACA,OACA,WACA,cACA,aACA,gBACA,UACA,SACA,aACA,YACA,YACA,YACA,YACA,YACA,SACA,WACA,YACA,cACA,iBACA,YACA,QACA,wBACA,SACA,YACA,YACA,YACA,YACA,WCx3BIC,EAAYC,EAAOC;;;;;EAOnBC,EAAS,WACNlB,EAAOmB,GAAYC,mBAAwB,KAC3CC,EAAYC,GAAiBF,mBAAS,IACvChC,EAAUC,2BAGb0B,EAAD,qBACGQ,EAAD,CACEC,MAAO,CACLC,MAAO,OACPC,SAAU,SAEZ1B,MAAAA,EACAG,SAAU,CAACwB,EAAOC,OACPA,MACGxC,EAAQoB,KAAK,YAAYoB,MAEvCP,WAAAA,EACAQ,cAAe,CAACF,EAAOG,OACPA,IAEhBC,QAASjB,EACTkB,eAAiBC,GAAYA,EAC7BC,YAAc5C,mBACX6C,EAAD/D,OACMkB,GADN,CAEE8C,QAAQ,WACRC,MAAM,4CAKXnD,EAAD,QC7CAoD,EAAc,WACZjF,EAAWN,GAAUoC,GAAUA,EAAM9B,WACrCC,EAAiBP,GAAUoC,GAAUA,EAAM7B,gDAE9CiF,EAAD,CACEC,KAAM,GACNrC,SAAU,UAGVsC,QAASpF,K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"}